---
title: "Class 5 Data Visualization"
author: "Kristiana Wong A16281367"
format: pdf
---

# Graphics systems in R

There are many graphics systems in R for making plots and figures.

We have already played a little with **"base R"** graphics and the 'plot()' function.

Today we will start learning about a popular graphics package called 'ggplot2()'.

This is an add-on package - i.e. we need to install it. I install it (like I install any packages) with the 'install.packages()' function.

```{r}
plot(cars)
```

Before I can use the functions from a package I have to load up the package from my "library".

```{r}
library(ggplot2)
ggplot(cars)
```

Every ggplot is made up of at least 3 things:
- data (the number etc. that will go into your plot)
- aes (how the columns of data map to the plot aesthetics)
- geoms (how the plot actually looks, points, bars, lines etc.)


```{r}
ggplot(cars) +
  aes (x = speed, y = dist) + 
  geom_point()
```

For simple plots ggplot is more verbase - it takes more code - than base R plot.
```{r}
ggplot(cars) +
  aes (x = speed, y = dist) + 
  geom_point() +
  geom_smooth(method="lm") +
  labs(title = "Stopping distance of old cars", subtitle = "A sill example plot") +
  theme_bw()
```

```{r}
ggplot(cars) +
  aes (x = speed, y = dist) + 
  geom_point() +
  geom_smooth(method="lm", se="FALSE") +
  labs(title = "Stopping distance of old cars", subtitle = "A sill example plot") +
  theme_bw()
```

```{r}
url <- "https://bioboot.github.io/bimm143_S20/class-material/up_down_expression.txt"
genes <- read.delim(url)
head(genes)
```

Q. Use the nrow() function to find out how many genes are in this dataset. What is your answer? 
```{r}
nrow(genes)
```
A. 5196 genes

Q. Use the colnames() function and the ncol() function on the genes data frame to find out what the column names are (we will need these later) and how many columns there are. How many columns did you find? 
```{r}
colnames(genes)
ncol(genes)
```
A. 4 columns

Q. Use the table() function on the State column of this data.frame to find out how many ‘up’ regulated genes there are. What is your answer? 
```{r}
table(genes$State)
```
A. 127 up-regulated genes

Q. Using your values above and 2 significant figures. What fraction of total genes is up-regulated in this dataset? 
```{r}
round(table(genes$State)/ nrow(genes) * 100, 2)
```
A. 2.44 of total genes up-regulated

```{r}
library(ggplot2)
ggplot(genes)
```

```{r}
p <-  ggplot(genes) +
  aes (x = Condition1, y = Condition2, col = State) + 
  geom_point()
```

```{r}
p + scale_colour_manual( values=c("blue","gray","red") ) +
  labs(title="Gene Expresion Changes Upon Drug Treatment",
         x="Control (no drug) ",
         y="Drug Treatment")
```


```{r}
# File location online
url <- "https://raw.githubusercontent.com/jennybc/gapminder/master/inst/extdata/gapminder.tsv"
gapminder <- read.delim(url)
```

```{r}
library(dplyr)
gapminder_2007 <- gapminder %>% filter(year==2007)
```

```{r}
ggplot(gapminder_2007) +
  aes(x = gdpPercap, y=lifeExp, color = continent, size = pop) +
  geom_point(alpha = 0.5)
```

```{r}
ggplot(gapminder_2007) +
  aes(x = gdpPercap, y=lifeExp, color = pop) +
  geom_point(alpha = 0.8)
```

```{r}
ggplot(gapminder_2007) +
  aes(x = gdpPercap, y=lifeExp, size = pop) +
  geom_point(alpha = 0.5)
```

```{r}
ggplot(gapminder_2007) + 
  geom_point(aes(x = gdpPercap, y = lifeExp,
                 size = pop), alpha=0.5) + 
  scale_size_area(max_size = 10)
```

Q. Can you adapt the code you have learned thus far to reproduce our gapminder scatter plot for the year 1957? What do you notice about this plot is it easy to compare with the one for 2007?
```{r}
gapminder_1957 <- gapminder %>% filter(year==1957)

ggplot(gapminder_1957) + 
  aes(x = gdpPercap, y = lifeExp, color = continent, size = pop)+
  geom_point(alpha=0.7) +
  scale_size_area(max_size = 10)
```


Q. Do the same steps above but include 1957 and 2007 in your input dataset for ggplot(). You should now include the layer facet_wrap(~year) to produce the following plot:
```{r}
gapminder_1957 <- gapminder %>% filter(year==1957 | year == 2007)

ggplot(gapminder_1957) + 
  aes(x = gdpPercap, y = lifeExp, color = continent, size = pop)+
  geom_point(alpha=0.7) +
  scale_size_area(max_size = 10) +
  facet_wrap(~year)
```

